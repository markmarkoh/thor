var cities = [];
var citiesOverlay = L.d3SvgOverlay(function(sel,proj){

    var minLogPop = Math.log2(d3.min(cities,function(d){return d.population;}));
    var citiesUpd = sel.selectAll('circle').data(cities);
    citiesUpd.enter()
        .append('circle')
        .attr('stroke','black')
        .attr('fill',function(d){return (d.place == 'city') ? "red" : "blue";})
        .on("mouseenter", function(d){d3.select(this).attr("fill-opacity", "0.5");})
        .on("mouseleave", function(d){d3.select(this).attr("fill-opacity", "1.0");})
        .attr('cx',function(d){return proj.latLngToLayerPoint(d.latLng).x;});

    citiesUpd
        .attr('stroke-width', 1 / proj.layer._scale)
        .attr('r',function(d){return (Math.log2(d.population) - minLogPop + 2) / proj.layer._scale;})
        .attr('cy',function(d){return proj.latLngToLayerPoint(d.latLng).y;})

});
d3.csv("swiss-cities.csv",function(data){
    cities = data.map(function(d){
        d.latLng = [+d.lat,+d.lng];
        d.population = (d.population == '') ? 2000 : +d.population; //NAs
        return d;
    });



    var lg = L.layerGroup().addLayer(citiesOverlay).addTo(map);
    layerSelector.addOverlay(citiesOverlay, "Swiss cities D3SvgOverlay");
    layerSelector.addOverlay(lg, "Swiss cities in LayerGroup");
});